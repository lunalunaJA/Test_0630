<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zenithst.core.log.mapper.ZappContentLogMapper" >
  <resultMap id="BaseResultMap" type="com.zenithst.core.log.vo.ZappContentLog" >
    <id column="LOGID" property="logid" jdbcType="CHAR" />
    <result column="COMPANYID" property="companyid" jdbcType="CHAR" />
    <result column="LOGOBJID" property="logobjid" jdbcType="VARCHAR" />
    <result column="LOGTEXT" property="logtext" jdbcType="VARCHAR" />
    <result column="LOGGERID" property="loggerid" jdbcType="VARCHAR" />
    <result column="LOGGERNAME" property="loggername" jdbcType="VARCHAR" />
    <result column="LOGGERDEPTID" property="loggerdeptid" jdbcType="VARCHAR" />
    <result column="LOGGERDEPTNAME" property="loggerdeptname" jdbcType="VARCHAR" />
    <result column="LOGTIME" property="logtime" jdbcType="VARCHAR" />
    <result column="LOGTYPE" property="logtype" jdbcType="VARCHAR" />
    <result column="ACTION" property="action" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zenithst.core.log.vo.ZappContentLog" extends="BaseResultMap" >
    <result column="LOGS" property="logs" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="JoinResultMap" type="com.zenithst.core.log.vo.ZappContentLog" >
    <id column="CONLOG_LOGID" property="logid" jdbcType="CHAR" />
    <result column="CONLOG_COMPANYID" property="companyid" jdbcType="CHAR" />
    <result column="CONLOG_LOGOBJID" property="logobjid" jdbcType="VARCHAR" />
    <result column="CONLOG_LOGTEXT" property="logtext" jdbcType="VARCHAR" />
    <result column="CONLOG_LOGGERID" property="loggerid" jdbcType="VARCHAR" />
    <result column="CONLOG_LOGGERNAME" property="loggername" jdbcType="VARCHAR" />
    <result column="CONLOG_LOGGERDEPTID" property="loggerdeptid" jdbcType="VARCHAR" />
    <result column="CONLOG_LOGGERDEPTNAME" property="loggerdeptname" jdbcType="VARCHAR" />
    <result column="CONLOG_LOGTIME" property="logtime" jdbcType="VARCHAR" />
    <result column="CONLOG_LOGTYPE" property="logtype" jdbcType="VARCHAR" />
    <result column="CONLOG_ACTION" property="action" jdbcType="VARCHAR" />
    <result column="CONLOG_LOGS" property="logs" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
     LOGID
   , COMPANYID
   , LOGOBJID
   , LOGTEXT
   , LOGGERID
   , LOGGERNAME
   , LOGGERDEPTID
   , LOGGERDEPTNAME
   , LOGTIME
   , LOGTYPE
   , ACTION
  </sql>
  <sql id="Blob_Column_List" >
    LOGS
  </sql>
  <sql id="Join_Column_List_IN" >
     CONLOG.LOGID			AS CONLOG_LOGID
   , CONLOG.COMPANYID		AS CONLOG_COMPANYID
   , CONLOG.LOGOBJID		AS CONLOG_LOGOBJID
   , CONLOG.LOGTEXT			AS CONLOG_LOGTEXT
   , CONLOG.LOGGERID		AS CONLOG_LOGGERID
   , CONLOG.LOGGERNAME		AS CONLOG_LOGGERNAME
   , CONLOG.LOGGERDEPTID	AS CONLOG_LOGGERDEPTID
   , CONLOG.LOGGERDEPTNAME	AS CONLOG_LOGGERDEPTNAME
   , CONLOG.LOGTIME			AS CONLOG_LOGTIME
   , CONLOG.LOGTYPE			AS CONLOG_LOGTYPE
   , CONLOG.ACTION			AS CONLOG_ACTION
   , CONLOG.LOGS			AS CONLOG_LOGS
  </sql>
  <sql id="Join_Column_List_OUT" >
     CONLOG_LOGID
   , CONLOG_COMPANYID
   , CONLOG_LOGOBJID
   , CONLOG_LOGTEXT
   , CONLOG_LOGGERID
   , CONLOG_LOGGERNAME
   , CONLOG_LOGGERDEPTID
   , CONLOG_LOGGERDEPTNAME
   , CONLOG_LOGTIME
   , CONLOG_LOGTYPE
   , CONLOG_ACTION
   , CONLOG_LOGS
  </sql>
  <sql id="All_Value_List" >
     get_sha256(concat(gen_random_uuid(), #{logid,jdbcType=CHAR}))
   , #{companyid,jdbcType=CHAR}
   , #{logobjid,jdbcType=VARCHAR}
   , #{logtext,jdbcType=VARCHAR}
   , #{loggerid,jdbcType=VARCHAR}
   , #{loggername,jdbcType=VARCHAR}
   , #{loggerdeptid,jdbcType=VARCHAR}
   , #{loggerdeptname,jdbcType=VARCHAR}
   , #{logtime,jdbcType=VARCHAR}
   , #{logtype,jdbcType=VARCHAR}
   , #{action,jdbcType=VARCHAR}
   , #{logs,jdbcType=LONGVARCHAR}
  </sql>
  <sql id="Batch_All_Value_List" >
     get_sha256(concat(gen_random_uuid(), #{batch.logid,jdbcType=CHAR}))
   , #{batch.companyid,jdbcType=CHAR}
   , #{batch.logobjid,jdbcType=VARCHAR}
   , #{batch.logtext,jdbcType=VARCHAR}
   , #{batch.loggerid,jdbcType=VARCHAR}
   , #{batch.loggername,jdbcType=VARCHAR}
   , #{batch.loggerdeptid,jdbcType=VARCHAR}
   , #{batch.loggerdeptname,jdbcType=VARCHAR}
   , #{batch.logtime,jdbcType=VARCHAR}
   , #{batch.logtype,jdbcType=VARCHAR}
   , #{batch.action,jdbcType=VARCHAR}
   , #{batch.logs,jdbcType=LONGVARCHAR}
  </sql> 
  <select id="selectByDynaimc" resultMap="ResultMapWithBLOBs" parameterType="com.zenithst.core.common.bind.ZappDynamic" >
    select
    	<include refid="Base_Column_List" />
    	,
    	<include refid="Blob_Column_List" />
    from zapp_contentlog CONLOG
    <if test="_parameter != null" >
      <include refid="com.zenithst.core.common.mapper.ZappCommonMapper.Dynamic_Where_Clause" />
    </if>
    <if test="dynamic.orderByClause != null" >
      order by ${dynamic.orderByClause}
    </if>
  </select>
  <select id="selectExtendByDynamic" resultMap="ResultMapWithBLOBs" parameterType="map" >
    select
       <include refid="Base_Column_List" />
     , <include refid="Blob_Column_List" />
    from zapp_contentlog CONLOG
    
    <if test="_parameter != null" >
      <include refid="com.zenithst.core.common.mapper.ZappCommonMapper.Dynamic_Where_Clause" />
    </if>
    
   	<!-- Sorting -->
   	<include refid="com.zenithst.core.common.mapper.ZappCommonMapper.limit_order" />
    
    <!-- Paging -->
	<include refid="com.zenithst.core.common.mapper.ZappCommonMapper.limit_pg" />
	
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    	<include refid="Base_Column_List" />
    	,
    	<include refid="Blob_Column_List" />
    from zapp_contentlog
    where LOGID = #{logid,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from zapp_contentlog
    where LOGID = #{logid,jdbcType=CHAR}
  </delete>
  <delete id="deleteByDynamic" parameterType="com.zenithst.core.common.bind.ZappDynamic" >
    delete CONLOG from zapp_contentlog CONLOG
    <if test="_parameter != null" >
      <include refid="com.zenithst.core.common.mapper.ZappCommonMapper.Dynamic_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zenithst.core.log.vo.ZappContentLog" >
    insert into zapp_contentlog  (<include refid="Base_Column_List" />, <include refid="Blob_Column_List" />)
    values (<include refid="All_Value_List" />)
  </insert>
  <insert id="insertu" parameterType="com.zenithst.core.log.vo.ZappContentLog" >
  </insert>  
  <insert id="insertb" parameterType="map">
  		insert into zapp_contentlog (<include refid="Base_Column_List" />, <include refid="Blob_Column_List" />) values 
  			<foreach collection="batch" item="batch" separator=" , " >
  				(<include refid="Batch_All_Value_List" />)
  			</foreach>
  </insert>
  <select id="countByDynamic" parameterType="com.zenithst.core.common.bind.ZappDynamic" resultType="java.lang.Integer" >
    select count(*) from zapp_contentlog CONLOG
    <if test="_parameter != null" >
      <include refid="com.zenithst.core.common.mapper.ZappCommonMapper.Dynamic_Where_Clause" />
    </if>
  </select>
  <update id="updateByDynamic" parameterType="map" >
    update zapp_contentlog CONLOG
    <set >
      <if test="vo.logid != null" >
        LOGID = #{vo.logid,jdbcType=CHAR},
      </if>
      <if test="vo.companyid != null" >
        COMPANYID = #{vo.companyid,jdbcType=CHAR},
      </if>
      <if test="vo.logobjid != null" >
        LOGOBJID = #{vo.logobjid,jdbcType=VARCHAR},
      </if>
      <if test="vo.logtext != null" >
        LOGTEXT = #{vo.logtext,jdbcType=VARCHAR},
      </if>
      <if test="vo.loggerid != null" >
        LOGGERID = #{vo.loggerid,jdbcType=VARCHAR},
      </if>
      <if test="vo.loggername != null" >
        LOGGERNAME = #{vo.loggername,jdbcType=VARCHAR},
      </if>
      <if test="vo.loggerdeptid != null" >
        LOGGERDEPTID = #{vo.loggerdeptid,jdbcType=VARCHAR},
      </if>
      <if test="vo.loggerdeptname != null" >
        LOGGERDEPTNAME = #{vo.loggerdeptname,jdbcType=VARCHAR},
      </if>
      <if test="vo.logtime != null" >
        LOGTIME = #{vo.logtime,jdbcType=VARCHAR},
      </if>
      <if test="vo.logtype != null" >
        LOGTYPE = #{vo.logtype,jdbcType=VARCHAR},
      </if>
      <if test="vo.action != null" >
        ACTION = #{vo.action,jdbcType=VARCHAR},
      </if>
      <if test="vo.logs != null" >
        LOGS = #{vo.logs,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="com.zenithst.core.common.mapper.ZappCommonMapper.Update_By_Dynamic_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zenithst.core.log.vo.ZappContentLog" >
    update zapp_contentlog
    <set >
      <if test="companyid != null" >
        COMPANYID = #{companyid,jdbcType=CHAR},
      </if>
      <if test="logobjid != null" >
        LOGOBJID = #{logobjid,jdbcType=VARCHAR},
      </if>
      <if test="logtext != null" >
        LOGTEXT = #{logtext,jdbcType=VARCHAR},
      </if>
      <if test="loggerid != null" >
        LOGGERID = #{loggerid,jdbcType=VARCHAR},
      </if>
      <if test="loggername != null" >
        LOGGERNAME = #{loggername,jdbcType=VARCHAR},
      </if>
      <if test="loggerdeptid != null" >
        LOGGERDEPTID = #{loggerdeptid,jdbcType=VARCHAR},
      </if>
      <if test="loggerdeptname != null" >
        LOGGERDEPTNAME = #{loggerdeptname,jdbcType=VARCHAR},
      </if>
      <if test="logtime != null" >
        LOGTIME = #{logtime,jdbcType=VARCHAR},
      </if>
      <if test="logtype != null" >
        LOGTYPE = #{logtype,jdbcType=VARCHAR},
      </if>
      <if test="action != null" >
        ACTION = #{action,jdbcType=VARCHAR},
      </if>
      <if test="logs != null" >
        LOGS = #{logs,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where LOGID = #{logid,jdbcType=CHAR}
  </update>
  <select id="exists" resultType="java.lang.String" parameterType="com.zenithst.core.common.bind.ZappDynamic" >
    select 'Y' AS YN
      from DUAL 
     where exists (select 1
    		         from zapp_contentlog CONLOG
				     <if test="_parameter != null" >
					 	<include refid="com.zenithst.core.common.mapper.ZappCommonMapper.Dynamic_Where_Clause" />
				     </if>
				  )
  </select> 
</mapper>